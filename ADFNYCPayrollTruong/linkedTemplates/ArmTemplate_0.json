{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADFNYCPayrollTruong"
		},
		"ADLSGen2LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ADLSGen2LinkedService'"
		},
		"SQLDBLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SQLDBLinkedService'"
		},
		"SynapseLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SynapseLinkedService'"
		},
		"SQLDBLinkedService_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "serversqlnycpayroll.database.windows.net"
		},
		"SQLDBLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db_nycpayroll"
		},
		"SQLDBLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "truongnn7"
		},
		"SynapseLinkedService_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "synapse-nyc-payroll-truongnn7.sql.azuresynapse.net"
		},
		"SynapseLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SQLpool1"
		},
		"SynapseLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladminuser"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ADLSGen2LinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDBLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SQLDBLinkedService_properties_typeProperties_server')]",
					"database": "[parameters('SQLDBLinkedService_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SQLDBLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SQLDBLinkedService_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SynapseLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"server": "[parameters('SynapseLinkedService_properties_typeProperties_server')]",
					"database": "[parameters('SynapseLinkedService_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SynapseLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SynapseLinkedService_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gen2_AgencyMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgencyMaster.csv",
						"container": "dirpayrollfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gen2_EmpMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EmpMaster.csv",
						"container": "dirpayrollfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gen2_NYC_Payroll_Summary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dirstaging"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gen2_Payroll_2020')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "nycpayroll_2020.csv",
						"container": "dirhistoryfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "PayrollNumber",
						"type": "String"
					},
					{
						"name": "AgencyID",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AgencyStartDate",
						"type": "String"
					},
					{
						"name": "WorkLocationBorough",
						"type": "String"
					},
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "String"
					},
					{
						"name": "BaseSalary",
						"type": "String"
					},
					{
						"name": "PayBasis",
						"type": "String"
					},
					{
						"name": "RegularHours",
						"type": "String"
					},
					{
						"name": "RegularGrossPaid",
						"type": "String"
					},
					{
						"name": "OTHours",
						"type": "String"
					},
					{
						"name": "TotalOTPaid",
						"type": "String"
					},
					{
						"name": "TotalOtherPay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gen2_Payroll_2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "nycpayroll_2021.csv",
						"container": "dirpayrollfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "PayrollNumber",
						"type": "String"
					},
					{
						"name": "AgencyCode",
						"type": "String"
					},
					{
						"name": "AgencyName",
						"type": "String"
					},
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "AgencyStartDate",
						"type": "String"
					},
					{
						"name": "WorkLocationBorough",
						"type": "String"
					},
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "String"
					},
					{
						"name": "BaseSalary",
						"type": "String"
					},
					{
						"name": "PayBasis",
						"type": "String"
					},
					{
						"name": "RegularHours",
						"type": "String"
					},
					{
						"name": "RegularGrossPaid",
						"type": "String"
					},
					{
						"name": "OTHours",
						"type": "String"
					},
					{
						"name": "TotalOTPaid",
						"type": "String"
					},
					{
						"name": "TotalOtherPay",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gen2_TitleMaster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TitleMaster.csv",
						"container": "dirpayrollfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TitleCode",
						"type": "String"
					},
					{
						"name": "TitleDescription",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase_Employee_Master')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_EMP_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase_NYC_Payroll_Summary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "TotalPaid",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Summary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase_Payroll_AGENCY_MD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_AGENCY_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase_Payroll_Data_2020')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyID",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data_2020"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase_Payroll_Data_2021')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PayrollNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyCode",
						"type": "varchar"
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "AgencyStartDate",
						"type": "date"
					},
					{
						"name": "WorkLocationBorough",
						"type": "varchar"
					},
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					},
					{
						"name": "LeaveStatusasofJune30",
						"type": "varchar"
					},
					{
						"name": "BaseSalary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PayBasis",
						"type": "varchar"
					},
					{
						"name": "RegularHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "RegularGrossPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OTHours",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOTPaid",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TotalOtherPay",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Data_2021"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDatabase_Payroll_TITLE_MD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDBLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TitleCode",
						"type": "varchar"
					},
					{
						"name": "TitleDescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_TITLE_MD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDBLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Synapse_NYC_Payroll_Summary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SynapseLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgencyName",
						"type": "varchar"
					},
					{
						"name": "TotalPaid",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NYC_Payroll_Summary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SynapseLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data Aggregation Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SqlDatabase_Payroll_Data_2020",
								"type": "DatasetReference"
							},
							"name": "Payroll2020Aggregation"
						},
						{
							"dataset": {
								"referenceName": "SqlDatabase_Payroll_Data_2021",
								"type": "DatasetReference"
							},
							"name": "Payroll2021Aggregation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SqlDatabase_NYC_Payroll_Summary",
								"type": "DatasetReference"
							},
							"name": "sink1PayrollSummary"
						},
						{
							"dataset": {
								"referenceName": "Gen2_NYC_Payroll_Summary",
								"type": "DatasetReference"
							},
							"name": "sink1GenPayrollSummary",
							"rejectedDataLinkedService": {
								"referenceName": "ADLSGen2LinkedService",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "UnionPayroll"
						},
						{
							"name": "FilterPayroll"
						},
						{
							"name": "DerivedPayroll"
						},
						{
							"name": "AggregatePayroll"
						}
					],
					"scriptLines": [
						"parameters{",
						"     dataflow_param_fiscalyear as integer (2020)",
						"}",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Payroll2020Aggregation",
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Payroll2021Aggregation",
						"Payroll2020Aggregation, Payroll2021Aggregation union(byName: true)~> UnionPayroll",
						"UnionPayroll filter(toInteger(FiscalYear) >= $dataflow_param_fiscalyear) ~> FilterPayroll",
						"FilterPayroll derive(TotalPaid = RegularGrossPaid +TotalOTPaid+TotalOtherPay) ~> DerivedPayroll",
						"DerivedPayroll aggregate(groupBy(AgencyName,",
						"          FiscalYear),",
						"     TotalPaid = sum(TotalPaid)) ~> AggregatePayroll",
						"AggregatePayroll sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          AgencyName as string,",
						"          TotalPaid as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1PayrollSummary",
						"AggregatePayroll sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['SummaryPayroll'],",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1GenPayrollSummary"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_Payroll_Data_2020')]",
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_Payroll_Data_2021')]",
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_NYC_Payroll_Summary')]",
				"[concat(variables('factoryId'), '/datasets/Gen2_NYC_Payroll_Summary')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeInfoDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Gen2_Payroll_2021",
								"type": "DatasetReference"
							},
							"name": "Payroll2021"
						},
						{
							"dataset": {
								"referenceName": "Gen2_Payroll_2021",
								"type": "DatasetReference"
							},
							"name": "DataFlowPayroll2021"
						},
						{
							"dataset": {
								"referenceName": "Gen2_EmpMaster",
								"type": "DatasetReference"
							},
							"name": "DataFlowEmpMaster"
						},
						{
							"dataset": {
								"referenceName": "Gen2_AgencyMaster",
								"type": "DatasetReference"
							},
							"name": "DataFlowAgencyMaster"
						},
						{
							"dataset": {
								"referenceName": "Gen2_TitleMaster",
								"type": "DatasetReference"
							},
							"name": "DataFlowTitleMaster"
						},
						{
							"dataset": {
								"referenceName": "Gen2_Payroll_2020",
								"type": "DatasetReference"
							},
							"name": "DataFlowPayroll2020"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SqlDatabase_Payroll_Data_2021",
								"type": "DatasetReference"
							},
							"name": "sink1Payroll2021"
						},
						{
							"dataset": {
								"referenceName": "SqlDatabase_Employee_Master",
								"type": "DatasetReference"
							},
							"name": "sink2EmpMaster"
						},
						{
							"dataset": {
								"referenceName": "SqlDatabase_Payroll_TITLE_MD",
								"type": "DatasetReference"
							},
							"name": "sink1TitleMaster"
						},
						{
							"dataset": {
								"referenceName": "SqlDatabase_Payroll_AGENCY_MD",
								"type": "DatasetReference"
							},
							"name": "sink1Agency"
						},
						{
							"dataset": {
								"referenceName": "SqlDatabase_Payroll_Data_2020",
								"type": "DatasetReference"
							},
							"name": "sink1Payroll2020"
						}
					],
					"transformations": [
						{
							"name": "EmpPayrollJoin"
						},
						{
							"name": "EmpAgencyPayrollJoin"
						},
						{
							"name": "EmpAgencyTitlePayrollJoin"
						},
						{
							"name": "SelectOuputEmp"
						}
					],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as string,",
						"          PayrollNumber as string,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as string,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as string,",
						"          PayBasis as string,",
						"          RegularHours as string,",
						"          RegularGrossPaid as string,",
						"          OTHours as string,",
						"          TotalOTPaid as string,",
						"          TotalOtherPay as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Payroll2021",
						"source(output(",
						"          FiscalYear as string,",
						"          PayrollNumber as string,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as string,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as string,",
						"          PayBasis as string,",
						"          RegularHours as string,",
						"          RegularGrossPaid as string,",
						"          OTHours as string,",
						"          TotalOTPaid as string,",
						"          TotalOtherPay as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DataFlowPayroll2021",
						"source(output(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DataFlowEmpMaster",
						"source(output(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DataFlowAgencyMaster",
						"source(output(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DataFlowTitleMaster",
						"source(output(",
						"          FiscalYear as string,",
						"          PayrollNumber as string,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as string,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as string,",
						"          PayBasis as string,",
						"          RegularHours as string,",
						"          RegularGrossPaid as string,",
						"          OTHours as string,",
						"          TotalOTPaid as string,",
						"          TotalOtherPay as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DataFlowPayroll2020",
						"DataFlowPayroll2021, DataFlowEmpMaster join(DataFlowPayroll2021@EmployeeID == DataFlowEmpMaster@EmployeeID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> EmpPayrollJoin",
						"EmpPayrollJoin, DataFlowAgencyMaster join(AgencyCode == AgencyID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> EmpAgencyPayrollJoin",
						"EmpAgencyPayrollJoin, DataFlowTitleMaster join(DataFlowPayroll2021@TitleCode == DataFlowTitleMaster@TitleCode,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> EmpAgencyTitlePayrollJoin",
						"EmpAgencyTitlePayrollJoin select(mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyCode,",
						"          AgencyName = DataFlowPayroll2021@AgencyName,",
						"          EmployeeID = DataFlowPayroll2021@EmployeeID,",
						"          LastName = DataFlowPayroll2021@LastName,",
						"          FirstName = DataFlowPayroll2021@FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode = DataFlowPayroll2021@TitleCode,",
						"          TitleDescription = DataFlowPayroll2021@TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay,",
						"          EmployeeID = DataFlowEmpMaster@EmployeeID,",
						"          LastName = DataFlowEmpMaster@LastName,",
						"          FirstName = DataFlowEmpMaster@FirstName,",
						"          AgencyID,",
						"          AgencyName = DataFlowAgencyMaster@AgencyName,",
						"          TitleCode = DataFlowTitleMaster@TitleCode,",
						"          TitleDescription = DataFlowTitleMaster@TitleDescription",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectOuputEmp",
						"DataFlowPayroll2021 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyCode as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1Payroll2021",
						"DataFlowEmpMaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2EmpMaster",
						"DataFlowTitleMaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1TitleMaster",
						"DataFlowAgencyMaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AgencyID as string,",
						"          AgencyName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1Agency",
						"DataFlowPayroll2020 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1Payroll2020"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Gen2_Payroll_2021')]",
				"[concat(variables('factoryId'), '/datasets/Gen2_EmpMaster')]",
				"[concat(variables('factoryId'), '/datasets/Gen2_AgencyMaster')]",
				"[concat(variables('factoryId'), '/datasets/Gen2_TitleMaster')]",
				"[concat(variables('factoryId'), '/datasets/Gen2_Payroll_2020')]",
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_Payroll_Data_2021')]",
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_Employee_Master')]",
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_Payroll_TITLE_MD')]",
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_Payroll_AGENCY_MD')]",
				"[concat(variables('factoryId'), '/datasets/SqlDatabase_Payroll_Data_2020')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data Aggregation Data pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data Aggregation Data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Data Aggregation Data",
								"type": "DataFlowReference",
								"parameters": {
									"dataflow_param_fiscalyear": "2020"
								},
								"datasetParameters": {
									"Payroll2020Aggregation": {},
									"Payroll2021Aggregation": {},
									"sink1PayrollSummary": {},
									"sink1GenPayrollSummary": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-30T15:46:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Data Aggregation Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeInfoDF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EmployeeInfoDF",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EmployeeInfoDF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Payroll2021": {},
									"DataFlowPayroll2021": {},
									"DataFlowEmpMaster": {},
									"DataFlowAgencyMaster": {},
									"DataFlowTitleMaster": {},
									"DataFlowPayroll2020": {},
									"sink1Payroll2021": {},
									"sink2EmpMaster": {},
									"sink1TitleMaster": {},
									"sink1Agency": {},
									"sink1Payroll2020": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-30T15:12:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EmployeeInfoDF')]"
			]
		}
	]
}