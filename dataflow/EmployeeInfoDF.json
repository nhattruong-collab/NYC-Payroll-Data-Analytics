{
	"name": "EmployeeInfoDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Gen2_Payroll_2021",
						"type": "DatasetReference"
					},
					"name": "Payroll2021"
				},
				{
					"dataset": {
						"referenceName": "Gen2_Payroll_2021",
						"type": "DatasetReference"
					},
					"name": "DataFlowPayroll2021"
				},
				{
					"dataset": {
						"referenceName": "Gen2_EmpMaster",
						"type": "DatasetReference"
					},
					"name": "DataFlowEmpMaster"
				},
				{
					"dataset": {
						"referenceName": "Gen2_AgencyMaster",
						"type": "DatasetReference"
					},
					"name": "DataFlowAgencyMaster"
				},
				{
					"dataset": {
						"referenceName": "Gen2_TitleMaster",
						"type": "DatasetReference"
					},
					"name": "DataFlowTitleMaster"
				},
				{
					"dataset": {
						"referenceName": "Gen2_Payroll_2020",
						"type": "DatasetReference"
					},
					"name": "DataFlowPayroll2020"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SqlDatabase_Payroll_Data_2021",
						"type": "DatasetReference"
					},
					"name": "sink1Payroll2021"
				},
				{
					"dataset": {
						"referenceName": "SqlDatabase_Employee_Master",
						"type": "DatasetReference"
					},
					"name": "sink2EmpMaster"
				},
				{
					"dataset": {
						"referenceName": "SqlDatabase_Payroll_TITLE_MD",
						"type": "DatasetReference"
					},
					"name": "sink1TitleMaster"
				},
				{
					"dataset": {
						"referenceName": "SqlDatabase_Payroll_AGENCY_MD",
						"type": "DatasetReference"
					},
					"name": "sink1Agency"
				},
				{
					"dataset": {
						"referenceName": "SqlDatabase_Payroll_Data_2020",
						"type": "DatasetReference"
					},
					"name": "sink1Payroll2020"
				}
			],
			"transformations": [
				{
					"name": "EmpPayrollJoin"
				},
				{
					"name": "EmpAgencyPayrollJoin"
				},
				{
					"name": "EmpAgencyTitlePayrollJoin"
				},
				{
					"name": "SelectOuputEmp"
				}
			],
			"scriptLines": [
				"source(output(",
				"          FiscalYear as string,",
				"          PayrollNumber as string,",
				"          AgencyCode as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Payroll2021",
				"source(output(",
				"          FiscalYear as string,",
				"          PayrollNumber as string,",
				"          AgencyCode as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataFlowPayroll2021",
				"source(output(",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataFlowEmpMaster",
				"source(output(",
				"          AgencyID as string,",
				"          AgencyName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataFlowAgencyMaster",
				"source(output(",
				"          TitleCode as string,",
				"          TitleDescription as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataFlowTitleMaster",
				"source(output(",
				"          FiscalYear as string,",
				"          PayrollNumber as string,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as string,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as string,",
				"          PayBasis as string,",
				"          RegularHours as string,",
				"          RegularGrossPaid as string,",
				"          OTHours as string,",
				"          TotalOTPaid as string,",
				"          TotalOtherPay as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataFlowPayroll2020",
				"DataFlowPayroll2021, DataFlowEmpMaster join(DataFlowPayroll2021@EmployeeID == DataFlowEmpMaster@EmployeeID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> EmpPayrollJoin",
				"EmpPayrollJoin, DataFlowAgencyMaster join(AgencyCode == AgencyID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> EmpAgencyPayrollJoin",
				"EmpAgencyPayrollJoin, DataFlowTitleMaster join(DataFlowPayroll2021@TitleCode == DataFlowTitleMaster@TitleCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> EmpAgencyTitlePayrollJoin",
				"EmpAgencyTitlePayrollJoin select(mapColumn(",
				"          FiscalYear,",
				"          PayrollNumber,",
				"          AgencyCode,",
				"          AgencyName = DataFlowPayroll2021@AgencyName,",
				"          EmployeeID = DataFlowPayroll2021@EmployeeID,",
				"          LastName = DataFlowPayroll2021@LastName,",
				"          FirstName = DataFlowPayroll2021@FirstName,",
				"          AgencyStartDate,",
				"          WorkLocationBorough,",
				"          TitleCode = DataFlowPayroll2021@TitleCode,",
				"          TitleDescription = DataFlowPayroll2021@TitleDescription,",
				"          LeaveStatusasofJune30,",
				"          BaseSalary,",
				"          PayBasis,",
				"          RegularHours,",
				"          RegularGrossPaid,",
				"          OTHours,",
				"          TotalOTPaid,",
				"          TotalOtherPay,",
				"          EmployeeID = DataFlowEmpMaster@EmployeeID,",
				"          LastName = DataFlowEmpMaster@LastName,",
				"          FirstName = DataFlowEmpMaster@FirstName,",
				"          AgencyID,",
				"          AgencyName = DataFlowAgencyMaster@AgencyName,",
				"          TitleCode = DataFlowTitleMaster@TitleCode,",
				"          TitleDescription = DataFlowTitleMaster@TitleDescription",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectOuputEmp",
				"DataFlowPayroll2021 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyCode as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1Payroll2021",
				"DataFlowEmpMaster sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2EmpMaster",
				"DataFlowTitleMaster sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          TitleCode as string,",
				"          TitleDescription as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1TitleMaster",
				"DataFlowAgencyMaster sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          AgencyID as string,",
				"          AgencyName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1Agency",
				"DataFlowPayroll2020 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1Payroll2020"
			]
		}
	}
}